{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/deng-lab/viroprofiler/master/nextflow_schema.json",
    "title": "ViroProfiler pipeline parameters",
    "description": "A containerized bioinformatics pipeline for viral metagenomic data analysis",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "mode": {
                    "type": "string",
                    "default": "test",
                    "enum": [
                        "setup",
                        "test",
                        "fastqc",
                        "fastp",
                        "all"
                    ],
                    "description": "Pipeline running mode"
                },
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/learn/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "db": {
                    "type": "string",
                    "description": "Directory of ViroProfiler database",
                    "default": "~/.nextflow/assets/deng-lab/viroprofiler/db",
                    "fa_icon": "fas fa-database"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            },
            "required": [
                "mode",
                "db"
            ]
        },
        "qc": {
            "title": "QC",
            "type": "object",
            "description": "Parameters of softwares used in the QC steps",
            "default": "",
            "properties": {
                "contamref_idx": {
                    "type": "string",
                    "description": "Reference contamination genome index file",
                    "fa_icon": "fas fa-book"
                },
                "decontam_min_similarity": {
                    "type": "number",
                    "description": "Minimum sequence similarity for decontamination",
                    "default": 0.95
                }
            }
        },
        "contig_library_parameters": {
            "title": "Contig library parameters",
            "type": "object",
            "description": "Parameters for creating contig library",
            "default": "",
            "properties": {
                "assembler": {
                    "type": "string",
                    "description": "Software used for genome assembly. Currently only SPAdes is supported.",
                    "default": "spades",
                    "enum": [
                        "spades"
                    ],
                    "hidden": true
                },
                "assemblies": {
                    "type": "string",
                    "description": "Use contigs or scaffolds from assembler output",
                    "default": "contigs",
                    "enum": [
                        "contigs",
                        "scaffolds"
                    ]
                },
                "contig_minlen": {
                    "type": "integer",
                    "description": "Minimum length of contigs for down-stream analyses",
                    "default": 3000
                },
                "contig_cluster_min_similarity": {
                    "type": "number",
                    "description": "Minimum similarity of contigs in a contig cluster",
                    "default": 95,
                    "minimum": 70,
                    "maximum": 100,
                    "hidden": true
                },
                "contig_cluster_min_coverage": {
                    "type": "number",
                    "description": "Minimum coverage of the shorter contig in a contig cluster",
                    "default": 85,
                    "minimum": 30,
                    "maximum": 100,
                    "hidden": true
                }
            }
        },
        "prot_library_parameters": {
            "title": "Protein library parameters",
            "type": "object",
            "description": "Parameters for creating protein library",
            "default": "",
            "properties": {
                "prot_cluster_min_similarity": {
                    "type": "number",
                    "description": "Minimum similarity of proteins in a protein cluster",
                    "default": 0.7
                },
                "prot_cluster_min_coverage": {
                    "type": "number",
                    "description": "Minimum coverage of the shorter protein in a protein cluster",
                    "default": 0.9
                }
            }
        },
        "gene_library_parameters": {
            "title": "Gene library parameters",
            "type": "object",
            "description": "Parameters for creating gene library",
            "default": "",
            "properties": {
                "gene_cluster_min_similarity": {
                    "type": "number",
                    "description": "Minimum similarity of genes in a gene cluster",
                    "default": 0.9
                },
                "gene_cluster_min_coverage": {
                    "type": "number",
                    "description": "Minimum coverage of the shorter gene in a gene cluster",
                    "default": 0.9
                }
            }
        },
        "binning_parameters": {
            "title": "Binning parameters",
            "type": "object",
            "description": "Contig binning parameters",
            "default": "",
            "properties": {
                "binning": {
                    "type": "string",
                    "description": "perform binning or not",
                    "enum": [
                        "false",
                        "phamb",
                        "vrhyme"
                    ]
                },
                "binning_minlen_contig": {
                    "type": "integer",
                    "description": "Minimum contig length for binning",
                    "default": 5000
                },
                "binning_minlen_bin": {
                    "type": "integer",
                    "description": "Minimum bin length",
                    "default": 5000
                }
            }
        },
        "viral_detection_parameters": {
            "title": "Viral detection parameters",
            "type": "object",
            "description": "Parameters for viral detection softwares",
            "default": "",
            "properties": {
                "dvf_qvalue": {
                    "type": "number",
                    "description": "DeepVirFinder q-value",
                    "default": 0.1
                },
                "dvf_maxlen": {
                    "type": "integer",
                    "description": "DeepVirFinder maximum contig length",
                    "default": 1000000
                },
                "virsorter2_groups": {
                    "type": "string",
                    "description": "Category of viruses, can be one or multiple of \"dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae\"",
                    "default": "dsDNAphage"
                }
            }
        },
        "kraken2": {
            "title": "Kraken2 parameters",
            "type": "object",
            "description": "Parameters for Kraken2",
            "default": "",
            "properties": {
                "kraken2_db": {
                    "type": "string",
                    "description": "Kraken2 database",
                    "default": "viral"
                },
                "kraken2_clean": {
                    "type": "boolean",
                    "description": "Clean Kraken2 database",
                    "default": true
                },
                "save_output_fastqs": {
                    "type": "boolean",
                    "description": "Save output fastqs from viral detection softwares",
                    "default": false
                },
                "save_reads_assignment": {
                    "type": "boolean",
                    "description": "Save reads assignment from viral detection softwares",
                    "default": false
                }
            }
        },
        "taxonomy_assignment_parameters": {
            "title": "Taxonomy assignment parameters",
            "type": "object",
            "description": "Parameters of softwares used in taxonomy assignment module",
            "default": "",
            "properties": {
                "taxa_db_source": {
                    "type": "string",
                    "description": "Which taxonomy db should be used",
                    "default": "NCBI",
                    "enum": [
                        "NCBI",
                        "ICTV"
                    ]
                },
                "contig_minlen_vcontact2": {
                    "type": "integer",
                    "description": "Minimum contig length for vConTACT2 input",
                    "default": 10000
                },
                "pc_inflation": {
                    "type": "number",
                    "description": "Inflation of protein clusters in vConTACT2",
                    "default": 1.5
                },
                "vc_inflation": {
                    "type": "number",
                    "description": "Inflation of viral clusters in vConTACT2",
                    "default": 1.5
                }
            }
        },
        "others": {
            "title": "Others",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "replicyc": {
                    "type": "string",
                    "description": "Reprecation cycle prediction software",
                    "default": "bacphlip",
                    "enum": [
                        "replidec",
                        "bacphlip"
                    ]
                },
                "use_phamb": {
                    "type": "boolean",
                    "description": "Use phamb for binning",
                    "default": false
                },
                "use_kraken2": {
                    "type": "boolean",
                    "description": "Use kraken2 for taxonomy assignment",
                    "default": false
                },
                "use_iphop": {
                    "type": "boolean",
                    "description": "Use iPhOP for phage host prediction",
                    "default": false
                },
                "use_decontam": {
                    "type": "boolean",
                    "description": "Use decontam for contamination removal",
                    "default": false
                },
                "use_abricate": {
                    "type": "boolean",
                    "description": "Use abricate for antimicrobial resistance gene detection",
                    "default": false
                },
                "use_eggnog": {
                    "type": "boolean",
                    "description": "Use eggNOG for functional annotation",
                    "default": false
                },
                "use_dram": {
                    "type": "boolean",
                    "description": "Use DRAM for metabolic reconstruction",
                    "default": false
                },
                "input_contigs": {
                    "type": "string",
                    "description": "Input contigs file",
                    "default": null
                },
                "reads_type": {
                    "type": "string",
                    "description": "Type of reads",
                    "default": "raw",
                    "enum": [
                        "raw",
                        "clean"
                    ]
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fas fa-server",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 60,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "400.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "100.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "hidden": true,
                    "fa_icon": "fas fa-bacon"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/qc"
        },
        {
            "$ref": "#/definitions/contig_library_parameters"
        },
        {
            "$ref": "#/definitions/gene_library_parameters"
        },
        {
            "$ref": "#/definitions/binning_parameters"
        },
        {
            "$ref": "#/definitions/viral_detection_parameters"
        },
        {
            "$ref": "#/definitions/taxonomy_assignment_parameters"
        },
        {
            "$ref": "#/definitions/others"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}